{"version":3,"file":"static/js/543.248262c8.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.js","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.js","webpack://react-homework-template/./src/components/MoviePage/MoviePage.module.css?7e00","components/MoviePage/MoviePage.js","services/FetchFilms.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieItem_item__iPuYx\",\"item_link\":\"MovieItem_item_link__LJLUu\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport s from './MovieItem.module.css';\n\nexport const MovieItem = ({ title, itemId, location }) => {\n  return (\n    <li className={s.item}>\n      <Link\n        className={s.item_link}\n        to={`/movies/${itemId}`}\n        state={{ from: location }}\n      >\n        {title}\n      </Link>\n    </li>\n  );\n};\n\nMovieItem.protoTypes = {\n  title: PropTypes.string.isRequired,\n  itemId: PropTypes.number.isRequired,\n  location: PropTypes.object.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\"};","import { MovieItem } from 'components/MovieItem/MovieItem';\nimport PropTypes from 'prop-types';\nimport s from './MovieList.module.css';\n\nexport const MovieList = ({ films, location }) => {\n  return (\n    <ul className={s.list}>\n      {films.map(({ id, title, name }) => {\n        const movieTitle = title || name;\n        return (\n          <MovieItem\n            key={id}\n            itemId={id}\n            title={movieTitle}\n            location={location}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.protoTypes = {\n  films: PropTypes.array.isRequired,\n  location: PropTypes.object.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MoviePage_form__dOm+x\",\"button\":\"MoviePage_button__HsoPA\",\"input\":\"MoviePage_input__JZkDm\",\"loading\":\"MoviePage_loading__yDVXG\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { SearchFilm } from 'services/FetchFilms';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { toast } from 'react-toastify';\nimport s from './MoviePage.module.css';\n\nconst MoviePage = () => {\n  const [query, setQuery] = useState('');\n  const [films, setFilms] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const ChangeQuery = e => {\n    setQuery(e.currentTarget.value.toLowerCase().trim());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query === '') {\n      setSearchParams('');\n      return toast('Please, enter movie name!', {\n        position: 'top-center',\n      });\n    }\n    setSearchParams({ query });\n    setQuery('');\n  };\n\n  useEffect(() => {\n    const keyWord = searchParams.get('query');\n    setFilms(null);\n    if (location.search === '') {\n      return;\n    }\n    const getFilms = async () => {\n      setLoading(true);\n      try {\n        const response = await SearchFilm(keyWord);\n        if (response.data.results.length === 0) {\n          setFilms(null);\n          return toast(`Movie ${keyWord} not found!`, {\n            position: 'top-center',\n          });\n        }\n        setFilms(response.data.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getFilms();\n  }, [searchParams, setSearchParams, location.search]);\n\n  return (\n    <>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <input\n          className={s.input}\n          onChange={ChangeQuery}\n          type=\"text\"\n          value={query}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search films\"\n        ></input>\n        <button className={s.button} type=\"submit\"></button>\n      </form>\n      {loading && <div className={s.loading}>Loading...</div>}\n      {films && <MovieList films={films} />}\n    </>\n  );\n};\n\nexport default MoviePage;\n","import axios from 'axios';\n\nconst API_KEY = '19261be26ee50f4d2c275bad83bad0b4';\n\nexport const TrendingFilms = async () => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n  );\n};\nexport const ViewFilm = async id => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n};\n\nexport const FilmCast = async id => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n};\n\nexport const FilmReviews = async id => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n};\n\nexport const SearchFilm = async key_word => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${key_word}`\n  );\n};\n"],"names":["MovieItem","title","itemId","location","className","s","to","state","from","protoTypes","PropTypes","MovieList","films","map","id","name","movieTitle","useState","query","setQuery","setFilms","loading","setLoading","useSearchParams","searchParams","setSearchParams","useLocation","useEffect","keyWord","get","search","getFilms","SearchFilm","response","data","results","length","toast","position","console","log","onSubmit","e","preventDefault","onChange","currentTarget","value","toLowerCase","trim","type","autoComplete","autoFocus","placeholder","API_KEY","TrendingFilms","axios","ViewFilm","FilmCast","FilmReviews","key_word"],"sourceRoot":""}