{"version":3,"file":"static/js/2.6cd703a6.chunk.js","mappings":"4QACA,EAAuB,4BAAvB,EAA0D,4BAA1D,EAA+F,8BAA/F,EAAoI,4BAApI,EAAuK,4B,SCE1JA,EAAgB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACnD,OACE,gBAAIC,UAAWC,EAAf,WACE,gBAAID,UAAWC,EAAf,UACGL,GAAQ,kBACT,iBAAMI,UAAWC,EAAjB,SAA4BF,EAAM,WAAOA,EAAP,QAAsB,SAE1D,cAAGC,UAAWC,EAAd,SAAuBH,GAAQ,oBAC/B,oBAASE,UAAWC,EAApB,SAA6BJ,QAKnCF,EAAcO,WAAa,CACzBN,KAAMO,IAAAA,OAAAA,WACNN,QAASM,IAAAA,OAAAA,WACTL,KAAMK,IAAAA,OAAAA,WACNJ,OAAQI,IAAAA,OAAAA,YCnBV,MAA0B,yBAA1B,EAA6D,yBAA7D,EAAgG,yBC6DhG,EAxDgB,WACd,IAAQC,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,2FACjBF,GAAW,GADM,mBAGQG,EAAAA,EAAAA,IAAYT,GAHpB,UAIsB,KAD/BU,EAHS,QAIFC,KAAKC,QAAQC,OAJX,uBAKbT,EAAW,IALE,0BAQfA,EAAWM,EAASC,KAAKC,SARV,kDAUfE,QAAQC,IAAR,MAVe,yBAYfT,GAAW,GAZI,6EAAH,qDAehBE,MACC,CAACR,IAEJ,IAAMgB,EAAU,SAAAtB,GACd,MAAkB,IAAIuB,KAAKvB,GAAMwB,cAAcC,MAAM,KACrD,OADA,gBAIF,OACE,gCACGd,IAAW,gBAAKT,UAAWC,EAAhB,yBAEXM,EAAQU,OAAS,GAChB,eAAIjB,UAAWC,EAAf,SACGM,EAAQiB,KACP,YAA0D,IAAvDC,EAAsD,EAAtDA,OAAQC,EAA8C,EAA9CA,GAAIC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,eAClC,OACE,SAAClC,EAAD,CAEEC,KAAM6B,EACN5B,QAAS8B,EACT7B,KAAMsB,EAAQQ,GACd7B,OAAQ8B,EAAe9B,QAJlB2B,SAWf,cAAG1B,UAAWC,EAAd,4D,yMCtDF6B,EAAU,mCAEHC,EAAa,mCAAG,8FACdC,IAAAA,IAAA,gEAC8CF,IAFhC,mFAAH,qDAKbG,EAAQ,mCAAG,WAAMP,GAAN,iFACTM,IAAAA,IAAA,6CAC2BN,EAD3B,oBACyCI,EADzC,oBADS,mFAAH,sDAMRI,EAAQ,mCAAG,WAAMR,GAAN,iFACTM,IAAAA,IAAA,6CAC2BN,EAD3B,4BACiDI,EADjD,oBADS,mFAAH,sDAMRjB,EAAW,mCAAG,WAAMa,GAAN,iFACZM,IAAAA,IAAA,6CAC2BN,EAD3B,4BACiDI,EADjD,2BADY,mFAAH,sDAMXK,EAAU,mCAAG,WAAMC,GAAN,iFACXJ,IAAAA,IAAA,4DAC0CF,EAD1C,4DACqGM,IAF1F,mFAAH","sources":["webpack://react-homework-template/./src/components/ReviewArticle/ReviewArticle.module.css?6d34","components/ReviewArticle/ReviewArticle.js","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.js","services/FetchFilms.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ReviewArticle_item__E1cdQ\",\"name\":\"ReviewArticle_name__RZT-z\",\"rating\":\"ReviewArticle_rating__VP9Gg\",\"date\":\"ReviewArticle_date__YOpQm\",\"text\":\"ReviewArticle_text__sAcVn\"};","import PropTypes from 'prop-types';\nimport s from './ReviewArticle.module.css';\n\nexport const ReviewArticle = ({ name, article, date, rating }) => {\n  return (\n    <li className={s.item}>\n      <h2 className={s.name}>\n        {name || 'Name not found'}\n        <span className={s.rating}>{rating ? `(${rating}/10)` : ''}</span>\n      </h2>\n      <p className={s.date}>{date || 'Date not found'}</p>\n      <article className={s.text}>{article}</article>\n    </li>\n  );\n};\n\nReviewArticle.protoTypes = {\n  name: PropTypes.string.isRequired,\n  article: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviews\":\"Reviews_reviews__n3fdK\",\"loading\":\"Reviews_loading__r+PE9\",\"message\":\"Reviews_message__u2VJu\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FilmReviews } from 'services/FetchFilms';\nimport { ReviewArticle } from 'components/ReviewArticle/ReviewArticle';\nimport s from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { itemId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      setLoading(true);\n      try {\n        const response = await FilmReviews(itemId);\n        if (response.data.results.length === 0) {\n          setReviews([]);\n          return;\n        }\n        setReviews(response.data.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getReviews();\n  }, [itemId]);\n\n  const getDate = date => {\n    const [dateStr] = new Date(date).toISOString().split('T');\n    return dateStr;\n  };\n\n  return (\n    <>\n      {loading && <div className={s.loading}> Loading...</div>}\n\n      {reviews.length > 0 ? (\n        <ul className={s.reviews}>\n          {reviews.map(\n            ({ author, id, content, updated_at, author_details }) => {\n              return (\n                <ReviewArticle\n                  key={id}\n                  name={author}\n                  article={content}\n                  date={getDate(updated_at)}\n                  rating={author_details.rating}\n                />\n              );\n            }\n          )}\n        </ul>\n      ) : (\n        <p className={s.message}>We don`t have any reviews for this movie.</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '19261be26ee50f4d2c275bad83bad0b4';\n\nexport const TrendingFilms = async () => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n  );\n};\nexport const ViewFilm = async id => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n};\n\nexport const FilmCast = async id => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n};\n\nexport const FilmReviews = async id => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n};\n\nexport const SearchFilm = async key_word => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${key_word}`\n  );\n};\n"],"names":["ReviewArticle","name","article","date","rating","className","s","protoTypes","PropTypes","itemId","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","getReviews","FilmReviews","response","data","results","length","console","log","getDate","Date","toISOString","split","map","author","id","content","updated_at","author_details","API_KEY","TrendingFilms","axios","ViewFilm","FilmCast","SearchFilm","key_word"],"sourceRoot":""}